apiVersion: apps/v1
kind: Deployment
metadata:
  name:  {{ .Values.metadata.name }}
  namespace: {{ .Values.metadata.namespace }}
  labels:
    app: {{ .Values.metadata.name }}
    squad: {{ .Values.metadata.squad }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: {{ .Values.metadata.name }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: {{ .Values.metadata.name }}
        squad: {{ .Values.metadata.squad }}
    spec:
      terminationGracePeriodSeconds: 10
      nodeSelector:
        warpin: services
      containers:
        - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          name: {{ .Values.metadata.name }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["-sc","/config/config.conf"]
          ports:
            - name: client
              containerPort: {{ .Values.nats.port }}
            - name: monitoring
              containerPort: {{ .Values.monitoring.port }}
          readinessProbe:
            tcpSocket:
              port: 4223
            initialDelaySeconds: 10
            periodSeconds: 15
          livenessProbe:
            tcpSocket:
              port: 4223
            initialDelaySeconds: 10
            periodSeconds: 15
          volumeMounts:
            - name: nats-streaming-config
              mountPath: /config
            - name: nats-streaming-storage
              mountPath: /store
        - image: synadia/prometheus-nats-exporter:0.6.2
          name: metrics-synadia
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - -channelz
            - -serverz
            - -connz
            - -routez
            - -subz
            - -varz
            - {{ .Values.monitoring.url | quote }}
          ports:
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 5
            timeoutSeconds: 1
      volumes:
        - name: nats-streaming-storage
          persistentVolumeClaim:
            claimName: nats-streaming-pvc
        - name: nats-streaming-config
          secret:
            secretName: {{ .Values.metadata.name }}-config

